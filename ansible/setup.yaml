---
    - name: Setup Kubernetes Dependencies
      hosts: all
      become: true
      tasks:
        - name: Update apt cache and upgrade packages
          apt:
            update_cache: yes
            upgrade: yes
    
        - name: Install required packages
          apt:
            name: 
              - curl
              - gpg
              - ca-certificates  
              - nfs-common
            state: present

        - name: Create keyrings directory
          file:
            path: /etc/apt/keyrings
            state: directory
            mode: '0755'

        - name: Install docker gpg key
          get_url:
            url: https://download.docker.com/linux/debian/gpg
            dest: /etc/apt/keyrings/docker.asc
            mode: '0644'

        - name: Add apt repo
          shell: echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          changed_when: false

        - name: Update apt cache again
          apt:
            update_cache: yes

        - name: Install containerd
          apt:
            name: 
              - containerd
            state: present
    
        - name: Configure containerd for k8s
          shell: |
            containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1
            sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
            systemctl restart containerd
            systemctl enable containerd

        - name: Disable swap
          command: swapoff -a
          changed_when: false
    
        - name: Disable swap in fstab
          replace:
            path: /etc/fstab
            regexp: '^([^#].*?\sswap\s+.*)$'
            replace: '#\1'

        - name: enable br_netfilter kernel module
          command: modprobe br_netfilter
          changed_when: false

        - name: add br_netfilter kernel module
          copy:
            dest: /etc/modules-load.d/k8s.conf
            content: br_netfilter
            owner: root
            group: root
            mode: '0644'

        - name: Add ip to the hostname
          shell: ip -4 addr show eth0 | grep -oP '(?<=inet\s)\d+(\.\d+){3}' | sed 's/$/ k8s-master.local k8s-master/' | tee -a /etc/hosts
          changed_when: false

        - name: Add kernel params
          copy:
            dest: /etc/sysctl.d/kubernetes.conf
            content: |
              net.bridge.bridge-nf-call-ip6tables = 1
              net.bridge.bridge-nf-call-iptables = 1
              net.ipv4.ip_forward = 1
            owner: root
            group: root
            mode: '0644'

        - name: Apply kernel params
          command: sysctl --system
          changed_when: false
    
        - name: Download Kubernetes GPG key
          get_url:
            url: https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key
            dest: /tmp/k8s-release.key
            mode: '0644'

        - name: Import Kubernetes GPG key
          command: gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg /tmp/k8s-release.key
    
        - name: Add Kubernetes repository
          copy:
            content: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /\n"
            dest: /etc/apt/sources.list.d/kubernetes.list
            mode: '0644'
    
        - name: Update apt cache again
          apt:
            update_cache: yes
    
        - name: Install Kubernetes packages
          apt:
            name:
              - kubelet
              - kubeadm
              - kubectl
            state: present
    
        - name: Hold Kubernetes packages
          dpkg_selections:
            name: "{{ item }}"
            selection: hold
          loop:
            - kubelet
            - kubeadm
            - kubectl
